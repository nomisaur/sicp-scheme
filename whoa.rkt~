#lang sicp


(define (goldenize x)
  (inc (/ 1 x)))

(define (diff a b)
  (cond ((> a b) (- a b))
        ((> b a) (- b a))
        (else 0)))

(define (fixed-point function initial tolerance)
  (define (iter prev curr)
    (display curr)
    (newline)
    (if (> tolerance (diff prev curr))
        curr
        (iter curr (function curr))))
  (iter initial (function initial)))


(fixed-point
 (lambda (n) (/ (log 1000) (log n)))
 100
 0.001)